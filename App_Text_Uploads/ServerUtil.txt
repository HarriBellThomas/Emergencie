package com.test.network;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ServerUtil {
	
	/**
	 * 
	 * @param url - page to visit and return the result
	 * @return string - data from visit
	 * @throws IOException - on error visiting
	 */
	public static String visitURl(String url)throws IOException {
		URL visit = new URL(url);
		//Open connections
		
				URLConnection conn = visit.openConnection();
				conn.connect();
				InputStream stream = conn.getInputStream();
				
				//Read stream
				
				int nRead;
				byte[] bytes = new byte[16384];
				ByteArrayOutputStream buffer = new ByteArrayOutputStream();

				while ((nRead = stream.read(bytes, 0, bytes.length)) != -1) {
				  buffer.write(bytes, 0, nRead);
				}
				buffer.flush();
				
				//Parse response to string
				
				String out = "";
				for(byte BYTE : buffer.toByteArray()) {
					out = out + ((char)BYTE);
				}
				
				
				return out;
	}
	
	
	
	
	public static String makeRequest(String[] actions,Map<?,?>[] params) throws IOException {
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("emie_actions",actions);
		map.put("emie_parameters",params);		
		String jString = JsonHelper.toString(map);
		String encoded = URLEncoder.encode(jString);
		return ServerUtil.visitURl("http://emergencie.hbt.io/api?emie_request="+encoded);
	}
	
	/**
	 * @param latitude
	 * @param longitude
	 * @return Array String of nearby hospitals ready to parse
	 * @throws IOException
	 */
	public static String makeNearbyHospitalRequest(double latitude, double longitude) throws IOException{
		String[] actions = new String[] {"NearestHospital"};
		Map<String,Object> params = new HashMap<String,Object>();
		params.put("lat",51.810864D);
		params.put("long",-2.712242D);
		Map<?,?>[] parameters = new Map<?,?>[]{params};		
		return makeRequest(actions, parameters);
	}
	
	/**
	 * 
	 * @param latitude
	 * @param longitude
	 * @return json ready to parse with name and distance
	 * @throws IOException
	 */
	public static String makeNearbyStreetRequest(double latitude, double longitude) throws IOException{
		String[] actions = new String[] {"NearestStreet"};
		Map<String,Object> params = new HashMap<String,Object>();
		params.put("lat",51.810864D);
		params.put("long",-2.712242D);
		Map<?,?>[] parameters = new Map<?,?>[]{params};		
		return makeRequest(actions, parameters);
	}
	
	/**
	 * 
	 * @param latitude
	 * @param longitude
	 * @return json ready to parse with name and distance
	 * @throws IOException
	 */
	public static String makeNearbyTownRequest(double latitude, double longitude) throws IOException{
		String[] actions = new String[] {"LatLongToLocal"};
		Map<String,Object> params = new HashMap<String,Object>();
		params.put("lat",51.810864D);
		params.put("long",-2.712242D);
		Map<?,?>[] parameters = new Map<?,?>[]{params};		
		return makeRequest(actions, parameters);
	}
	
	/**
	 * 
	 * @param article - what to search for
	 * @return json ready to parse
	 * @throws IOException
	 */
	public static String makeArticlesRequest(String article) throws IOException {
		String[] actions = new String[]{"GetArticles"};
		Map<String,Object> params = new HashMap<String,Object>();
		params.put("search",article);
		Map<?,?>[] parameters = new Map<?,?>[]{params};
		return makeRequest(actions, parameters);
	}
	
	public static String[] parsedArticlesRequest(String article) throws IOException {
		String response = makeArticlesRequest(article);
		System.out.println("Response = " + response);
		List<Map<String, Object>> lists = JsonHelper.getListedJsonsWithCommaFormatting(response,false);
		Map<String,Object> map = lists.get(0);
		try{
			return new String[] {(String) map.get("article_0"),(String) map.get("article_1"),(String) map.get("article_2")};
		}catch(Exception e) {
			return new String[] {"ERROR","ERROR","ERROR"};
		}
	}
	
	
	
}